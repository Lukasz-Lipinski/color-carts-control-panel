{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../create-product-form/create-product.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction SearcherComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cat_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r1.mainCategory);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, cat_r1.mainCategory), \" \");\n  }\n}\n\nexport let SearcherComponent = /*#__PURE__*/(() => {\n  class SearcherComponent {\n    constructor(createProductService) {\n      this.createProductService = createProductService;\n      this.searcherEmitter = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.searcherForm = new FormGroup({\n        searcher: new FormControl('', {\n          nonNullable: true\n        }),\n        category: new FormControl('all', {\n          nonNullable: true,\n          validators: [Validators.required]\n        })\n      });\n      this.categories = this.createProductService.getCategories();\n    }\n\n    onSearch(event) {\n      const parameters = {\n        category: this.searcherForm.controls['category'].value,\n        product: this.searcherForm.controls['searcher'].value\n      };\n      event instanceof KeyboardEvent && event.code === 'Enter' && this.searcherForm.valid && this.searcherEmitter.emit(parameters);\n      event instanceof SubmitEvent && this.searcherForm.valid && this.searcherEmitter.emit(parameters);\n    }\n\n  }\n\n  SearcherComponent.ɵfac = function SearcherComponent_Factory(t) {\n    return new (t || SearcherComponent)(i0.ɵɵdirectiveInject(i1.CreateProductService));\n  };\n\n  SearcherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearcherComponent,\n    selectors: [[\"app-searcher\"]],\n    outputs: {\n      searcherEmitter: \"searcherEmitter\"\n    },\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"container-fluid\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\"], [\"type\", \"search\", \"formControlName\", \"searcher\", \"placeholder\", \"Find product\", 1, \"form-control\", \"w-50\", 3, \"keydown\"], [\"formControlName\", \"category\", 1, \"form-select\"], [\"selected\", \"\", \"value\", \"all\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\"], [1, \"bi\", \"bi-search\"], [3, \"value\"]],\n    template: function SearcherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function SearcherComponent_Template_form_ngSubmit_1_listener($event) {\n          return ctx.onSearch($event);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"keydown\", function SearcherComponent_Template_input_keydown_3_listener($event) {\n          return ctx.onSearch($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 4)(5, \"option\", 5);\n        i0.ɵɵtext(6, \" ALL \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, SearcherComponent_option_7_Template, 3, 4, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 7);\n        i0.ɵɵelement(9, \"span\", 8);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.searcherForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.searcherForm.invalid);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i2.UpperCasePipe]\n  });\n  return SearcherComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}