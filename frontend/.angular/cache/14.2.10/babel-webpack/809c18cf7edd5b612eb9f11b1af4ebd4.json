{"ast":null,"code":"import { SharedModule } from '../shared/shared.module';\nimport { map } from 'rxjs';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\n\nfunction confirmPasswordValidator(password) {\n  return control => {\n    return control.value === password ? null : {\n      notConfirmed: true\n    };\n  };\n}\n\nexport class UserDataComponent {\n  constructor(activatedRoute) {\n    this.activatedRoute = activatedRoute;\n  }\n\n  ngOnInit() {\n    this.userData = this.activatedRoute.data.pipe(map(({\n      userData\n    }) => {\n      return userData;\n    }));\n    this.passwordForm = new FormGroup({\n      newPassword: new FormControl('', {\n        nonNullable: true,\n        validators: Validators.required\n      }),\n      oldPassword: new FormControl('', {\n        nonNullable: true,\n        validators: Validators.required\n      })\n    });\n    this.userForm = new FormGroup({\n      email: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required]\n      })\n    });\n  }\n\n}\n\nUserDataComponent.ɵfac = function UserDataComponent_Factory(t) {\n  return new (t || UserDataComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n\nUserDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserDataComponent,\n  selectors: [[\"app-user-data\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 6,\n  vars: 5,\n  consts: [[1, \"container-fluid\", \"row\", \"gap-1\"], [1, \"container\", \"col-5\", \"border\", \"shadow\", \"rounded-2\", \"p-3\"]],\n  template: function UserDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"json\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, i0.ɵɵpipeBind1(4, 3, ctx.userData)), \" \");\n    }\n  },\n  dependencies: [SharedModule, i2.AsyncPipe, i2.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWRhdGEuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAT,QAA6B,yBAA7B;AAGA,SAAqBC,GAArB,QAAgC,MAAhC;AACA,SAEEC,WAFF,EAGEC,SAHF,EAMEC,UANF,QAOO,gBAPP;;;;;AAmBA,SAASC,wBAAT,CACEC,QADF,EACkB;EAEhB,OACEC,OADK,IAEsB;IAC3B,OAAOA,OAAO,CAACC,KAAR,KAAkBF,QAAlB,GACH,IADG,GAEH;MACEG,YAAY,EAAE;IADhB,CAFJ;EAKD,CARD;AASD;;AASD,OAAM,MAAOC,iBAAP,CAAwB;EAI5BC,YACUC,cADV,EACwC;IAA9B;EACN;;EAEJC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKF,cAAL,CAAoBG,IAApB,CAAyBC,IAAzB,CACdf,GAAG,CAAC,CAAC;MAAEa;IAAF,CAAD,KAAiB;MACnB,OAAOA,QAAP;IACD,CAFE,CADW,CAAhB;IAMA,KAAKG,YAAL,GAAoB,IAAId,SAAJ,CAAc;MAChCe,WAAW,EAAE,IAAIhB,WAAJ,CAAgB,EAAhB,EAAoB;QAC/BiB,WAAW,EAAE,IADkB;QAE/BC,UAAU,EAAEhB,UAAU,CAACiB;MAFQ,CAApB,CADmB;MAKhCC,WAAW,EAAE,IAAIpB,WAAJ,CAAgB,EAAhB,EAAoB;QAC/BiB,WAAW,EAAE,IADkB;QAE/BC,UAAU,EAAEhB,UAAU,CAACiB;MAFQ,CAApB;IALmB,CAAd,CAApB;IAWA,KAAKE,QAAL,GAAgB,IAAIpB,SAAJ,CAAc;MAC5BqB,KAAK,EAAE,IAAItB,WAAJ,CAAgB,EAAhB,EAAoB;QACzBiB,WAAW,EAAE,IADY;QAEzBC,UAAU,EAAE,CAAChB,UAAU,CAACiB,QAAZ;MAFa,CAApB;IADqB,CAAd,CAAhB;EAMD;;AAhC2B;;;mBAAjBX,mBAAiBe;AAAA;;;QAAjBf;EAAiBgB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC7C9BP,mCAA2C,CAA3C,EAA2C,KAA3C,EAA2C,CAA3C;MAIIA;;;MACFA;MACAA;MAGFA;;;;MALIA;MAAAA;;;iBDuCQzB,cAAYiC;EAAAC","names":["SharedModule","map","FormControl","FormGroup","Validators","confirmPasswordValidator","password","control","value","notConfirmed","UserDataComponent","constructor","activatedRoute","ngOnInit","userData","data","pipe","passwordForm","newPassword","nonNullable","validators","required","oldPassword","userForm","email","i0","selectors","standalone","features","decls","vars","consts","template","i2","styles"],"sourceRoot":"","sources":["C:\\Projects\\Angular\\color-carts-control-panel\\frontend\\src\\app\\user-data\\user-data.component.ts","C:\\Projects\\Angular\\color-carts-control-panel\\frontend\\src\\app\\user-data\\user-data.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserData } from '../components/auth/auth.service';\r\nimport { Observable, map } from 'rxjs';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nexport interface PasswordFormProps {\r\n  newPassword: FormControl<string>;\r\n  confirmPassword: FormControl<string>;\r\n  oldPassword: FormControl<string>;\r\n}\r\n\r\nexport interface UserFormProps {\r\n  email: FormControl<string>;\r\n}\r\n\r\nfunction confirmPasswordValidator(\r\n  password: string\r\n): ValidatorFn {\r\n  return (\r\n    control: AbstractControl\r\n  ): ValidationErrors | null => {\r\n    return control.value === password\r\n      ? null\r\n      : {\r\n          notConfirmed: true,\r\n        };\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-data',\r\n  templateUrl: './user-data.component.html',\r\n  styleUrls: ['./user-data.component.scss'],\r\n  standalone: true,\r\n  imports: [SharedModule],\r\n})\r\nexport class UserDataComponent implements OnInit {\r\n  userData!: Observable<UserData>;\r\n  passwordForm!: FormGroup<PasswordFormProps>;\r\n  userForm!: FormGroup<UserFormProps>;\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userData = this.activatedRoute.data.pipe(\r\n      map(({ userData }) => {\r\n        return userData;\r\n      })\r\n    );\r\n\r\n    this.passwordForm = new FormGroup({\r\n      newPassword: new FormControl('', {\r\n        nonNullable: true,\r\n        validators: Validators.required,\r\n      }),\r\n      oldPassword: new FormControl('', {\r\n        nonNullable: true,\r\n        validators: Validators.required,\r\n      }),\r\n    });\r\n\r\n    this.userForm = new FormGroup({\r\n      email: new FormControl('', {\r\n        nonNullable: true,\r\n        validators: [Validators.required],\r\n      }),\r\n    });\r\n  }\r\n}\r\n","<section class=\"container-fluid row gap-1\">\r\n  <div\r\n    class=\"container col-5 border shadow rounded-2 p-3\"\r\n  >\r\n    {{ userData | async | json }}\r\n  </div>\r\n  <div\r\n    class=\"container col-5 border shadow rounded-2 p-3\"\r\n  ></div>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module"}