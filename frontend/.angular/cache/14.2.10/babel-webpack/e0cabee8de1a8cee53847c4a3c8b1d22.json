{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, NewUser } from '../auth/auth.service';\nimport { ToastDirective } from '../toast/toast.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"../toast/toast.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../toast/toast.directive\";\n\nfunction HomeFormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"input\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getError(field_r2.label) && ctx_r0.isTouchedAndDirty(field_r2.label) && \"is-invalid\" || \"\")(\"formControlName\", field_r2.label)(\"placeholder\", field_r2.placeholder);\n  }\n}\n\nfunction HomeFormComponent_ng_template_12_Template(rf, ctx) {}\n\nexport let HomeFormComponent = /*#__PURE__*/(() => {\n  class HomeFormComponent {\n    constructor(authService, toastService, router) {\n      this.authService = authService;\n      this.toastService = toastService;\n      this.router = router;\n      this.isRegisterForm = false;\n      this.fields = [{\n        label: 'name',\n        placeholder: 'Your name'\n      }, {\n        label: 'email',\n        placeholder: 'Your email'\n      }, {\n        label: 'password',\n        placeholder: 'Your password'\n      }];\n    }\n\n    ngOnInit() {\n      this.form = new FormGroup({\n        name: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required]\n        }),\n        email: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required, Validators.email]\n        }),\n        password: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required, Validators.minLength(5)]\n        })\n      });\n    }\n\n    onToggle() {\n      this.isRegisterForm = !this.isRegisterForm;\n    }\n\n    getError(label) {\n      return this.form.controls[label].errors;\n    }\n\n    isTouchedAndDirty(label) {\n      return this.form.controls[label].touched && this.form.controls[label].dirty;\n    }\n\n    onSubmit() {\n      let newUser = {\n        email: '',\n        name: '',\n        password: ''\n      };\n\n      for (let controlName in this.form.controls) {\n        Object.defineProperty(newUser, controlName, {\n          value: this.form.controls[controlName].value\n        });\n      }\n\n      this.form.valid && this.isRegisterForm && this.authService.signup(newUser).subscribe({\n        next: res => {\n          this.toastService.createComponent(this.toast, res), res.status === 200 && this.authService.setUser({ ...newUser\n          });\n          res.status === 200 && this.router.navigate(['/dashboard']);\n        }\n      });\n      this.form.valid && !this.isRegisterForm && this.authService.signin(newUser).subscribe({\n        next: res => {\n          this.toastService.createComponent(this.toast, res), res.status === 200 && this.authService.setUser({ ...newUser\n          });\n          res.status === 200 && this.router.navigate(['/dashboard']);\n        }\n      });\n    }\n\n    ngOnDestroy() {}\n\n  }\n\n  HomeFormComponent.ɵfac = function HomeFormComponent_Factory(t) {\n    return new (t || HomeFormComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ToastService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  HomeFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeFormComponent,\n    selectors: [[\"app-home-form\"]],\n    viewQuery: function HomeFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(ToastDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toast = _t.first);\n      }\n    },\n    decls: 13,\n    vars: 8,\n    consts: [[1, \"w-100\", \"vh-100\", \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"container\", \"form-width\", \"border\", \"rounded-3\", \"shadow\", \"p-4\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"container\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-center\", \"p-3\"], [1, \"text-primary\", \"text-decoration-underline\", \"pointer\", 3, \"click\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", 3, \"ngClass\", \"disabled\"], [\"appToast\", \"\"], [1, \"container\"], [1, \"form-control\", \"my-3\", 3, \"ngClass\", \"formControlName\", \"placeholder\"]],\n    template: function HomeFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function HomeFormComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtemplate(2, HomeFormComponent_div_2_Template, 2, 3, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"p\");\n        i0.ɵɵtext(5, \" Switch on \");\n        i0.ɵɵelementStart(6, \"span\", 4);\n        i0.ɵɵlistener(\"click\", function HomeFormComponent_Template_span_click_6_listener() {\n          return ctx.onToggle();\n        });\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"uppercase\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(12, HomeFormComponent_ng_template_12_Template, 0, 0, \"ng-template\", 7);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fields);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.isRegisterForm ? \"login\" : \"sign up\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.form.invalid ? \"btn-outline-danger\" : \"btn-outline-primary\")(\"disabled\", ctx.form.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 6, ctx.isRegisterForm ? \"sign up\" : \"login\"), \" \");\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.ToastDirective, i4.UpperCasePipe],\n    styles: [\".form-width[_ngcontent-%COMP%]{min-width:350px;max-width:400px}.pointer[_ngcontent-%COMP%]{cursor:pointer}\"]\n  });\n  return HomeFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}