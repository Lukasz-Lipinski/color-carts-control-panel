{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { concatMap, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../create-product-form/create-product.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction UpdateProductFormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"span\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, field_r6.label));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", field_r6.name);\n  }\n}\n\nfunction UpdateProductFormComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cat_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r7.mainCategory);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, cat_r7.mainCategory), \" \");\n  }\n}\n\nfunction UpdateProductFormComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subcat_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", subcat_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, subcat_r8), \" \");\n  }\n}\n\nfunction UpdateProductFormComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProductFormComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelement(1, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UpdateProductFormComponent = /*#__PURE__*/(() => {\n  class UpdateProductFormComponent {\n    constructor(createProductService) {\n      this.createProductService = createProductService;\n      this.toastEmitter = new EventEmitter();\n      this.spinner = {\n        isShown: false\n      };\n    }\n\n    ngOnInit() {\n      this.updateForm = new FormGroup({\n        amount: new FormControl(this.selectedProduct.amount, {\n          nonNullable: true\n        }),\n        brand: new FormControl(this.selectedProduct.brand, {\n          nonNullable: true\n        }),\n        description: new FormControl(this.selectedProduct.description, {\n          nonNullable: true\n        }),\n        ean: new FormControl(this.selectedProduct.ean, {\n          nonNullable: true\n        }),\n        model: new FormControl(this.selectedProduct.model, {\n          nonNullable: true\n        }),\n        name: new FormControl(this.selectedProduct.name, {\n          nonNullable: true\n        }),\n        price: new FormControl(this.selectedProduct.price, {\n          nonNullable: true\n        }),\n        category: new FormControl(this.selectedProduct.category, {\n          nonNullable: true\n        }),\n        subcategory: new FormControl(this.selectedProduct.subcategory, {\n          nonNullable: true\n        })\n      });\n      this.updateForm.controls['ean'].disable();\n      this.fields = this.createProductService.getFields();\n      this.categories = this.createProductService.getCategories();\n      this.setSubcategoriesAtStart();\n    }\n\n    setSubcategoriesAtStart() {\n      this.subcategories = this.categories.find(category => category.mainCategory === this.updateForm.controls['category'].value)?.subcategories || [];\n    }\n\n    onSetSubcategories() {\n      this.setSubcategoriesAtStart();\n      this.updateForm.controls['subcategory'].setValue(this.subcategories[0]);\n    }\n\n    onUpdate() {\n      this.spinner = {\n        isShown: true\n      };\n      const newProduct = {\n        id: '',\n        name: '',\n        brand: '',\n        ean: this.selectedProduct.ean,\n        price: 0,\n        amount: 0,\n        category: '',\n        subcategory: '',\n        description: '',\n        model: ''\n      };\n\n      for (let control in this.updateForm.controls) {\n        if (control !== 'ean') {\n          Object.defineProperty(newProduct, control, {\n            value: this.updateForm.controls[control].value\n          });\n        }\n      }\n\n      newProduct.id = this.selectedProduct.id;\n      this.createProductService.updateProduct(newProduct).pipe(concatMap(res => {\n        this.spinner = {\n          isShown: false\n        };\n        return of(res);\n      })).subscribe({\n        next: res => {\n          this.toastEmitter.emit(res);\n        }\n      });\n    }\n\n  }\n\n  UpdateProductFormComponent.ɵfac = function UpdateProductFormComponent_Factory(t) {\n    return new (t || UpdateProductFormComponent)(i0.ɵɵdirectiveInject(i1.CreateProductService));\n  };\n\n  UpdateProductFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateProductFormComponent,\n    selectors: [[\"app-update-product-form\"]],\n    inputs: {\n      selectedProduct: \"selectedProduct\"\n    },\n    outputs: {\n      toastEmitter: \"toastEmitter\"\n    },\n    decls: 20,\n    vars: 8,\n    consts: [[1, \"container\", \"z-index-upper\"], [1, \"d-flex\", \"flex-column\", \"align-items-center\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"input-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-group\"], [1, \"input-group-text\"], [\"formControlName\", \"category\", 1, \"form-select\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"subcategory\", 1, \"form-select\"], [1, \"container\", \"p-3\"], [\"formControlName\", \"description\", \"rows\", \"10\", 1, \"form-control\"], [1, \"container\"], [\"type\", \"submit\", 1, \"btn\", 3, \"ngClass\", \"disabled\"], [4, \"ngIf\", \"ngIfElse\"], [\"Spinner\", \"\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControlName\"], [3, \"value\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"visually-hidden\"]],\n    template: function UpdateProductFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateProductFormComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onUpdate();\n        });\n        i0.ɵɵtemplate(2, UpdateProductFormComponent_div_2_Template, 5, 4, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"span\", 4);\n        i0.ɵɵtext(5, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"select\", 5);\n        i0.ɵɵlistener(\"change\", function UpdateProductFormComponent_Template_select_change_6_listener() {\n          return ctx.onSetSubcategories();\n        });\n        i0.ɵɵtemplate(7, UpdateProductFormComponent_option_7_Template, 3, 4, \"option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"span\", 4);\n        i0.ɵɵtext(10, \" Subcategory \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 7);\n        i0.ɵɵtemplate(12, UpdateProductFormComponent_option_12_Template, 3, 4, \"option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 8);\n        i0.ɵɵelement(14, \"textarea\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵtemplate(17, UpdateProductFormComponent_span_17_Template, 2, 0, \"span\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(18, UpdateProductFormComponent_ng_template_18_Template, 2, 0, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r4 = i0.ɵɵreference(19);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fields);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.subcategories);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", ctx.spinner.isShown ? \"btn-outline-warning\" : \"btn-outline-primary\")(\"disabled\", ctx.spinner.isShown);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.spinner.isShown)(\"ngIfElse\", _r4);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i2.UpperCasePipe],\n    styles: [\"textarea[_ngcontent-%COMP%]{resize:none}.z-index-upper[_ngcontent-%COMP%]{z-index:5}\"],\n    changeDetection: 0\n  });\n  return UpdateProductFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}