{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./create-product.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction CreateProductFormComponent_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 14)(1, \"span\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const input_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, input_r3.label));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.checkIfValid(input_r3.name) ? \"is-valid\" : \"is-invalid\")(\"formControlName\", input_r3.name);\n  }\n}\n\nfunction CreateProductFormComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵproperty(\"value\", category_r4.mainCategory)(\"selected\", i_r5 === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 3, category_r4.mainCategory), \" \");\n  }\n}\n\nfunction CreateProductFormComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subcategory_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", subcategory_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, subcategory_r6), \" \");\n  }\n}\n\nexport let CreateProductFormComponent = /*#__PURE__*/(() => {\n  class CreateProductFormComponent {\n    constructor(createProductService) {\n      this.createProductService = createProductService;\n      this.newProductEmitter = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.fields = this.createProductService.getFields();\n      this.categories = this.createProductService.getCategories();\n      this.subcategories = this.categories[0].subcategories;\n      this.createProductForm = new FormGroup({\n        name: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required]\n        }),\n        model: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required]\n        }),\n        brand: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required]\n        }),\n        ean: new FormControl(0, {\n          nonNullable: true,\n          validators: [Validators.required, Validators.pattern(/^\\d+$/), Validators.min(1000)]\n        }),\n        price: new FormControl(0, {\n          nonNullable: true,\n          validators: [Validators.required, Validators.pattern(/^[0-9]*(\\.[0-9]{0,2})?$/), Validators.min(1)]\n        }),\n        amount: new FormControl(0, {\n          nonNullable: true,\n          validators: [Validators.required, Validators.pattern(/^\\d+$/), Validators.min(1)]\n        }),\n        category: new FormControl(this.categories[0].mainCategory, {\n          nonNullable: true,\n          validators: [Validators.required]\n        }),\n        subcategory: new FormControl(this.subcategories[0], {\n          nonNullable: true,\n          validators: [Validators.required]\n        }),\n        description: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required, Validators.maxLength(400)]\n        })\n      });\n    }\n\n    checkIfValid(label) {\n      return this.createProductForm.controls[label] && this.createProductForm.controls[label].valid;\n    }\n\n    isDisabled() {\n      return this.createProductForm.invalid;\n    }\n\n    onSetIndex(event) {\n      const select = event.target;\n      this.subcategories = this.categories[select.options.selectedIndex].subcategories;\n      this.createProductForm.controls['subcategory'].setValue(this.subcategories[0]);\n    }\n\n    onSubmit() {\n      let newProduct = {\n        name: '',\n        brand: '',\n        ean: 0,\n        price: 0,\n        amount: 0,\n        category: '',\n        subcategory: '',\n        description: '',\n        model: ''\n      };\n\n      for (let [key, FormControl] of Object.entries(this.createProductForm.controls)) {\n        Object.defineProperty(newProduct, key, {\n          value: parseFloat(FormControl.value) ? parseFloat(FormControl.value) : FormControl.value\n        });\n      }\n\n      this.newProductEmitter.emit(newProduct);\n      this.createProductForm.reset();\n    }\n\n  }\n\n  CreateProductFormComponent.ɵfac = function CreateProductFormComponent_Factory(t) {\n    return new (t || CreateProductFormComponent)(i0.ɵɵdirectiveInject(i1.CreateProductService));\n  };\n\n  CreateProductFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateProductFormComponent,\n    selectors: [[\"app-create-product-form\"]],\n    outputs: {\n      newProductEmitter: \"newProductEmitter\"\n    },\n    decls: 20,\n    vars: 7,\n    consts: [[1, \"container-fluid\", \"d-flex\", \"flex-column\", \"shadow\", \"border\", \"p-5\", \"customWidth\", \"rounded\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"h3\", \"pb-4\"], [\"class\", \"input-group flex-nowrap mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-group\"], [1, \"input-group-text\"], [\"formControlName\", \"category\", 1, \"form-select\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"subcategory\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"py-3\"], [1, \"h4\", \"text-center\"], [\"formControlName\", \"description\", \"rows\", \"10\", 1, \"form-control\", 3, \"ngClass\"], [1, \"py-3\", \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", 3, \"ngClass\", \"disabled\"], [1, \"input-group\", \"flex-nowrap\", \"mb-3\"], [1, \"input-group-text\", \"labelWidth\"], [\"type\", \"string\", 1, \"form-control\", 3, \"ngClass\", \"formControlName\"], [3, \"value\", \"selected\"], [3, \"value\"]],\n    template: function CreateProductFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateProductFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2, \" Product Details \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, CreateProductFormComponent_label_3_Template, 5, 5, \"label\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"span\", 4);\n        i0.ɵɵtext(6, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 5);\n        i0.ɵɵlistener(\"change\", function CreateProductFormComponent_Template_select_change_7_listener($event) {\n          return ctx.onSetIndex($event);\n        });\n        i0.ɵɵtemplate(8, CreateProductFormComponent_option_8_Template, 3, 5, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\", 4);\n        i0.ɵɵtext(10, \"Subcategory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 7);\n        i0.ɵɵtemplate(12, CreateProductFormComponent_option_12_Template, 3, 4, \"option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"h4\", 10);\n        i0.ɵɵtext(15, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"textarea\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 12)(18, \"button\", 13);\n        i0.ɵɵtext(19, \" Add product \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.createProductForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fields);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.subcategories);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", ctx.checkIfValid(\"description\") ? \"is-valid\" : \"is-invalid\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.isDisabled() ? \"btn-outline-danger\" : \"btn-outline-success\")(\"disabled\", ctx.isDisabled());\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i2.UpperCasePipe],\n    styles: [\".customWidth[_ngcontent-%COMP%]{max-width:40rem;min-width:35rem}.labelWidth[_ngcontent-%COMP%]{width:9rem}textarea[_ngcontent-%COMP%]{resize:none}\"],\n    changeDetection: 0\n  });\n  return CreateProductFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}