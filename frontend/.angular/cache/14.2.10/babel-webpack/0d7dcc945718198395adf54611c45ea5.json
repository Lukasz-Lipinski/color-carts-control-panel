{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../create-product-form/create-product.service\";\nimport * as i2 from \"../modal/modal.component\";\nimport * as i3 from \"../update-product-form/update-product-form.component\";\nimport * as i4 from \"@angular/common\";\nexport let UpdatedFormModalComponent = /*#__PURE__*/(() => {\n  class UpdatedFormModalComponent {\n    constructor(createProductService) {\n      this.createProductService = createProductService;\n      this.modalDetails = {\n        title: 'Updating product'\n      };\n      this.toastEmitter = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.selectedProduct$ = this.createProductService.productDetails$;\n    }\n\n    onCloseModal() {\n      this.createProductService.modal$.next('');\n    }\n\n    onToastEmitter(res) {\n      this.toastEmitter.emit(res);\n      this.createProductService.modal$.next('');\n    }\n\n  }\n\n  UpdatedFormModalComponent.ɵfac = function UpdatedFormModalComponent_Factory(t) {\n    return new (t || UpdatedFormModalComponent)(i0.ɵɵdirectiveInject(i1.CreateProductService));\n  };\n\n  UpdatedFormModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdatedFormModalComponent,\n    selectors: [[\"app-updated-form-modal\"]],\n    outputs: {\n      toastEmitter: \"toastEmitter\"\n    },\n    decls: 3,\n    vars: 4,\n    consts: [[3, \"modalDetails\", \"closeDialogEmitter\"], [\"body\", \"\", 3, \"selectedProduct\", \"toastEmitter\"]],\n    template: function UpdatedFormModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-modal\", 0);\n        i0.ɵɵlistener(\"closeDialogEmitter\", function UpdatedFormModalComponent_Template_app_modal_closeDialogEmitter_0_listener() {\n          return ctx.onCloseModal();\n        });\n        i0.ɵɵelementStart(1, \"app-update-product-form\", 1);\n        i0.ɵɵlistener(\"toastEmitter\", function UpdatedFormModalComponent_Template_app_update_product_form_toastEmitter_1_listener($event) {\n          return ctx.onToastEmitter($event);\n        });\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"modalDetails\", ctx.modalDetails);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"selectedProduct\", i0.ɵɵpipeBind1(2, 2, ctx.selectedProduct$));\n      }\n    },\n    dependencies: [i2.ModalComponent, i3.UpdateProductFormComponent, i4.AsyncPipe],\n    changeDetection: 0\n  });\n  return UpdatedFormModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}